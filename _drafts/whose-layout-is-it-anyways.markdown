---
layout: post
title:  "Whose layout is it anyways â€” where the margins are made up and the spec doesn't matter"
categories: posts
description: TODO
---

I've been [working on rebuilding Kosmonaut's layout engine](https://github.com/twilco/kosmonaut/pull/14), and in doing
so uncovered a bizarre incongruence between one of the most foundational CSS specs and the actual implementation of said
spec in all major browsers.

### The CSS box model and block layout

In the CSS box model, boxes are made up of several components: margin, border, padding, and the box content.

{:refdef: style="text-align: center;"}
<a href="/assets/img/box_model.png">![Picture of the CSS box model](/assets/img/box_model.png)</a>
{:refdef}
<div style="margin-top: -10px; margin-bottom: 10px; text-align: center; font-style: italic; font-size: .85rem">The CSS box model, taken from <a href="https://drafts.csswg.org/css2/#box-model</a">https://drafts.csswg.org/css2/#box-model</a></div>

When you visit a webpage, the specified HTML, CSS, and other resources are downloaded by your browser, parsed 
into a DOM and styles, turned into a tree of boxes, laid out to determine box size and position, and painted to your screen.
Various CSS properties, such as `display`, influence the type of box or boxes each DOM node generates FOOTNOTE, and each box type
follows different rules in layout.  One of the most common types of layout is _block layout_, which is what we'll be investigating today.  

### Block layout: calculating box width and margins

Luckily, the CSS specifications are pretty detailed on how to calculate the size of each component of a box.  We're
specifically going to be looking at the calculation of box width and left and right margins FOOTNOTE.

---

> {% footnotes %}
>    {% fnbody %}
> Check out the table from CSS Display Level 3 for a comprehensive list of boxes generated by each <code>display</code> value:
> <a href="https://drafts.csswg.org/css-display/#display-value-summary">https://drafts.csswg.org/css-display/#display-value-summary</a>
>    {% endfnbody %}
>    {% fnbody %}
> When taking the <code>writing-mode</code> property into account, the equation we're investigating actually calculates the inline-size and inline-start and inline-end margins rather than width and left and right margins.  To keep it simple, this post will discuss only the latter set of values.  If you want to know more, the writing mode spec gives a nice overview of what changes in abstract layout:
> <a href="https://drafts.csswg.org/css-writing-modes-4/#abstract-layout">https://drafts.csswg.org/css-writing-modes-4/#abstract-layout</a>
>    {% endfnbody %}
> {% endfootnotes %}



Alternative title: A practical lesson on CSS spec purity vs. reality
